generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  map          Map
  comment      String
  place        String
  shootingDate DateTime
  score        Int
  files        File[]
  tagsId       String[] @db.ObjectId
  tags         Tag[]    @relation(fields: [tagsId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model File {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  fileId    String
  type      String
  duration  Int?
  post      Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String?   @db.ObjectId
  favorite  Favorite?
  isFav     Boolean   @default(false)
  createdAt DateTime
  updatedAt DateTime  @updatedAt
}

model Favorite {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  file      File     @relation(fields: [fileId], references: [id])
  fileId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String   @unique
  posts     Post[]   @relation(fields: [postsId], references: [id])
  postsId   String[] @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type Map {
  lat          Float
  lng          Float
  placeAddress String
}
